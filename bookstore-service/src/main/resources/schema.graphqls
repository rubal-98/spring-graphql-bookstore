schema {
    query: Query
    mutation: Mutation
}

type Query {
    searchBookById(id: ID!): Book
    authors: [Author!]!
    """
    Search for books by an author with a part of author's name
    """
    searchBookByAuthor(name: String!): [Book!]!
}

type Mutation {
    """
    Add a new book to the store.
    If the author of the book doesn't exist, an entry for the author is automatically created
    If the book exists already, the price of the book is overwritten and the number of copies is added
    """
    addBook(book: BookIn!): AddBookResult!
}

"""
Result of an add book operation
"""
union AddBookResult = Book | BookStoreError

type Book {
    """
    UUID generated by the system
    """
    id: ID!
    """
    Name of the book
    """
    name: String!
    """
    ISBN code of the book
    """
    isbn: String!
    """
    Year of publication of the book
    """
    year: Int!
    """
    Number of pages in the book
    """
    pages: Int!
    """
    Author of the book
    """
    author: Author!
    """
    Tags associated with this book
    """
    tags: [Tag!]!
    """
    Price of the book
    """
    price: Int!
    """
    Date on which this book was updated on the system
    """
    updatedOn: String!
    """
    User statistics about the book
    """
    stats: BookStats
}
"""
Information about the book added to the bookstore
"""
input BookIn {
    """
    Name of the book
    """
    name: String!
    """
    ISBN code of the book
    """
    isbn: String!
    """
    Year of publication of the book
    """
    year: Int!
    """
    Number of pages in the book
    """
    pages: Int!
    """
    Author of the book
    """
    author: AuthorIn!
    """
    Tags associated with this book
    """
    tags: [Tag!]!
    """
    Price of the book
    """
    price: Int!
    """
    Number of copies of the book
    """
    copies: Int!
}

type BookStats {
    id: ID!
    copies: Int!
    purchases: Int!
    lends: Int!
    likes: Int!
}
"""
Author of a book
"""
type Author {
    """
    UUID generated by the system
    """
    id: ID!
    """
    First name of the author
    """
    firstName: String!
    """
    Last name of the author
    """
    lastName: String!
}

"""
Author of a book, used when adding a book
"""
input AuthorIn {
    """
    First name of the author
    """
    firstName: String!
    """
    Last name of the author
    """
    lastName: String!
}

type Customer {
    id: ID!
    firstName: String!
    lastName: String!
    purchases: [Purchase!]!
    lendings: [Lending!]!
    likes: [Book!]!
}

type Purchase {
    id: ID!
    book: Book!
    purchasedOn: String!
}

type Lending {
    id: ID!
    book: Book!
    dueOn: String!
}

enum Tag {
    FICTION
    POLITICS
    ROMANCE
    THRILLER
}

"""
Book store operation error, something went wrong inside the application
"""
type BookStoreError {
    """
    Human readable error string
    """
    message: String!
    """
    HTTP status code of the error
    """
    status: Int!
}
